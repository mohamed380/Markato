@{
    var ce = (Markato.Models.Employee)Session["emp"];

}
@model ProjectsInfo

<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800' rel='stylesheet' type='text/css'>
    @using System.Web.Optimization;
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/SUcss")
    @using Markato.Models;


    @{
        var CurrentEmp = (Employee)Session["emp"];
        var CurrentUser = (Customer)Session["Customer"];

    }
</head>
<body class="open">
    <!-- Left Panel -->
    <!-- Left Panel -->
    <!-- Right Panel -->
    <!-- /header -->
    <aside id="left-panel" class="left-panel">
        <nav class="navbar navbar-expand-sm navbar-default ">
            <div class="navbar-header">
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#main-menu" aria-controls="main-menu" aria-expanded="false" aria-label="Toggle navigation">
                    <i class="fas fa-bars"></i>
                </button>
                <div class="col-sm-1" style="padding-top: 7px;">

                    <div class="user-area dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @if (Session["Customer"] != null)
                            {
                            <img class="user-avatar rounded-circle" src="@CurrentUser.CustomerPhoto" alt="User Avatar">
                            }
                            else
                            {

                                <img class="user-avatar rounded-circle" src="@CurrentEmp.EmployeePhoto" alt="User Avatar">
                            }
                        </a>
                        <div class="user-menu dropdown-menu">
                            <a class="nav-link" href="/SecondaryUsers/SecondaryUsersProfile"><i class="far fa-user"></i> My Profile</a>
                            <a class="nav-link logout" href="/Markato/Index"><i class="fas fa-power-off"></i> Logout</a>
                        </div>
                    </div>



                </div>

                <a class="navbar-brand" href="/"><h3><b>MARKATO</b></h3></a>

            </div>
            <div id="main-menu" class="main-menu collapse navbar-collapse">
                <ul class="nav navbar-nav">
                    <h3 class="menu-title">Control Panel</h3>
                    <li class="">
                        <a href="/HomePage/HomePage" class="" aria-haspopup="true" aria-expanded="false"> <i class="menu-icon fas fa-home"></i>Home</a>
                        @if (Session["JID"] == null)
                        {
                            <a href="#addProject" class="fButton" aria-haspopup="true" aria-expanded="false"> <i class="menu-icon fas fa-plus-circle"></i>Add Project</a>
                        }
                        <a href="#About" class="" aria-haspopup="true" aria-expanded="false"> <i class="menu-icon far fa-address-card"></i>About</a>
                        <a href="#Current" class="" aria-haspopup="true" aria-expanded="false"> <i class="menu-icon far fa-edit"></i>Current Projects</a>
                        <a href="#history" class="" aria-haspopup="true" aria-expanded="false"> <i class="menu-icon fas fa-history"></i>Previous Project (History)</a>

                    </li>
                </ul>
            </div>
        </nav>
    </aside>
    <div id="right-panel" class="right-panel">

        <div class="content mt-3">
            @RenderBody()
        </div>
    </div>


    @Scripts.Render("~/Scripts/mjs")
    <script>
        (function ($) {
            "use strict";

            jQuery('#vmap').vectorMap({
                map: 'world_en',
                backgroundColor: null,
                color: '#ffffff',
                hoverOpacity: 0.7,
                selectedColor: '#1de9b6',
                enableZoom: true,
                showTooltip: true,
                values: sample_data,
                scaleColors: ['#1de9b6', '#03a9f5'],
                normalizeFunction: 'polynomial'
            });
        })(jQuery);</script>
    <script>
        @{
            var labels = new List<String>();
            var data = new List<int>();


            var c = 0;

            for (var i = 1; i <= 12; i++)
            {
                c = 0;
                var str = i.ToString();

                if (i<=9)
                {
                    c = Model.projects.ToList().Where(p => p.ProjectEnd != null && p.projectStatues == "end" && p.ProjectEnd.Contains("/0" + str)).Count();
                }
                else if (i > 9)
                {
                    c = Model.projects.ToList().Where(p => p.ProjectEnd != null && p.projectStatues=="end" && p.ProjectEnd.Contains("/" + str)).Count();
                }
                data.Add(c);
            }


        }
        var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

        var randomScalingFactor = function () {
            return Math.round(Math.random() * 10);
        };

        var config = {
            type: 'line',
            data: {
                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                datasets: [{
                    label: 'Number of Projects',
                    backgroundColor: window.chartColors.red,
                    borderColor: window.chartColors.red,
                    data: [
                        @data[0],@data[1],@data[2],@data[3],@data[4],@data[5],@data[6],
                        @data[7],@data[8],@data[9],@data[10],@data[11]
                    ],
                    fill: false,
                }]
            },
            options: {
                responsive: true,
                title: {
                    display: true,
                    text: 'Your progress'
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                hover: {
                    mode: 'nearest',
                    intersect: true
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Month'
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: 'Value'
                        },
                        ticks: {
                            min: 0,
                            max: 10,

                            // forces step size to be 5 units
                            stepSize: 1
                        }
                    }]
                }
            }
        };

        window.onload = function () {
            var ctx = document.getElementById('canvas').getContext('2d');
            window.myLine = new Chart(ctx, config);
        };






    </script>

    @RenderSection("scripts", required: false)
</body>
</html>